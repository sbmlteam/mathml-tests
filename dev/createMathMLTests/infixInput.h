  infix.push_back("a");
  infix.push_back("ExponentialE");
  infix.push_back("exponentiale");
  infix.push_back("ExPoNeNtIaLE");
  infix.push_back("False");
  infix.push_back("FALSE");
  infix.push_back("false");
  infix.push_back("True");
  infix.push_back("pi");
  infix.push_back("PI");
  infix.push_back("avogadro");
  infix.push_back("Avogadro");
  infix.push_back("time");
  infix.push_back("inf");
  infix.push_back("infinity");
  infix.push_back("nan");
  infix.push_back("NaN");
  infix.push_back("notanumber");
  infix.push_back("abs(0)");
  infix.push_back("acos(0)");
  infix.push_back("arccos(0)");
  infix.push_back("acosh(0)");
  infix.push_back("arccosh(0)");
  infix.push_back("acot(0)");
  infix.push_back("arccot(0)");
  infix.push_back("acoth(0)");
  infix.push_back("arccoth(0)");
  infix.push_back("acsc(0)");
  infix.push_back("arccsc(0)");
  infix.push_back("acsch(0)");
  infix.push_back("arccsch(0)");
  infix.push_back("asec(0)");
  infix.push_back("arcsec(0)");
  infix.push_back("asech(0)");
  infix.push_back("arcsech(0)");
  infix.push_back("asin(0)");
  infix.push_back("arcsin(0)");
  infix.push_back("asinh(0)");
  infix.push_back("arcsinh(0)");
  infix.push_back("atan(0)");
  infix.push_back("arctan(0)");
  infix.push_back("atanh(0)");
  infix.push_back("arctanh(0)");
  infix.push_back("ceil(0)");
  infix.push_back("ceiling(0)");
  infix.push_back("cos(0)");
  infix.push_back("cosh(0)");
  infix.push_back("cot(0)");
  infix.push_back("coth(0)");
  infix.push_back("csc(0)");
  infix.push_back("csch(0)");
  infix.push_back("delay(x,3)");
  infix.push_back("exp(0)");
  infix.push_back("factorial(0)");
  infix.push_back("floor(0)");
  infix.push_back("lambda(0)");
  infix.push_back("log(1)");
  infix.push_back("ln(0)");
  infix.push_back("log10(0)");
  infix.push_back("piecewise(0)");
  infix.push_back("power(1,2)");
  infix.push_back("pow(1,2)");
  infix.push_back("sqr(0)");
  infix.push_back("sqrt(0)");
  infix.push_back("root(0)");
  infix.push_back("sec(0)");
  infix.push_back("sech(0)");
  infix.push_back("sin(0)");
  infix.push_back("sinh(0)");
  infix.push_back("tan(0)");
  infix.push_back("tanh(0)");
  infix.push_back("and(0)");
  infix.push_back("not(0)");
  infix.push_back("or(0)");
  infix.push_back("xor(0)");
  infix.push_back("eq(1,3)");
  infix.push_back("equals(0,-3)");
  infix.push_back("geq(5,6)");
  infix.push_back("gt(0,3)");
  infix.push_back("leq(0,0)");
  infix.push_back("lt(0,0)");
  infix.push_back("neq(0,3)");
  infix.push_back("divide(1,1)");
  infix.push_back("minus(0)");
  infix.push_back("plus(0)");
  infix.push_back("times(0)");
  infix.push_back("eq(1,1, 3)");
  infix.push_back("equals(0,0,-3)");
  infix.push_back("geq(5,5, 6)");
  infix.push_back("gt(0,-1,3)");
  infix.push_back("leq(0,0, 6)");
  infix.push_back("lt(0,5,0)");
  infix.push_back("piecewise(0,true)");
  infix.push_back("piecewise(0,true,1)");
  infix.push_back("piecewise(0,true,1,false)");
  infix.push_back("piecewise(0,true,1,false,-1)");
  infix.push_back("piecewise(0,true,1,false,-1,false)");
  infix.push_back("piecewise(0,1)");
  infix.push_back("piecewise(0,1,1)");
  infix.push_back("piecewise(0,1,1,0)");
  infix.push_back("piecewise(0,1,1,0,-1)");
  infix.push_back("piecewise(0,1,1,0,-1,0)");
  infix.push_back("piecewise(false,true)");
  infix.push_back("piecewise(false,true,true)");
  infix.push_back("piecewise(false,true,true,false)");
  infix.push_back("piecewise(false,true,true,false,true)");
  infix.push_back("piecewise(false,true,true,false,true,false)");
  infix.push_back("lambda(0,x)");
  infix.push_back("lambda(x,y,z,p,d,q)");
  infix.push_back("Abs(0)");
  infix.push_back("Acos(0)");
  infix.push_back("Arccos(0)");
  infix.push_back("Acosh(0)");
  infix.push_back("Arccosh(0)");
  infix.push_back("Acot(0)");
  infix.push_back("Arccot(0)");
  infix.push_back("Acoth(0)");
  infix.push_back("Arccoth(0)");
  infix.push_back("Acsc(0)");
  infix.push_back("Arccsc(0)");
  infix.push_back("Acsch(0)");
  infix.push_back("Arccsch(0)");
  infix.push_back("Asec(0)");
  infix.push_back("Arcsec(0)");
  infix.push_back("Asech(0)");
  infix.push_back("Arcsech(0)");
  infix.push_back("Asin(0)");
  infix.push_back("Arcsin(0)");
  infix.push_back("Asinh(0)");
  infix.push_back("Arcsinh(0)");
  infix.push_back("Atan(0)");
  infix.push_back("Arctan(0)");
  infix.push_back("Atanh(0)");
  infix.push_back("Arctanh(0)");
  infix.push_back("Ceil(0)");
  infix.push_back("Ceiling(0)");
  infix.push_back("Cos(0)");
  infix.push_back("Cosh(0)");
  infix.push_back("Cot(0)");
  infix.push_back("Coth(0)");
  infix.push_back("Csc(0)");
  infix.push_back("Csch(0)");
  infix.push_back("Delay(X,3)");
  infix.push_back("Exp(0)");
  infix.push_back("Factorial(0)");
  infix.push_back("Floor(0)");
  infix.push_back("Lambda(0)");
  infix.push_back("Log(1)");
  infix.push_back("Log(1,2)");
  infix.push_back("Ln(0)");
  infix.push_back("Log10(0)");
  infix.push_back("Piecewise(0)");
  infix.push_back("Power(1,2)");
  infix.push_back("Pow(1,2)");
  infix.push_back("Sqr(0)");
  infix.push_back("Sqrt(0)");
  infix.push_back("Root(0)");
  infix.push_back("Sec(0)");
  infix.push_back("Sech(0)");
  infix.push_back("Sin(0)");
  infix.push_back("Sinh(0)");
  infix.push_back("Tan(0)");
  infix.push_back("Tanh(0)");
  infix.push_back("And(0)");
  infix.push_back("Not(0)");
  infix.push_back("Or(0)");
  infix.push_back("Xor(0)");
  infix.push_back("Eq(1,3)");
  infix.push_back("Equals(0,-3)");
  infix.push_back("Geq(5,6)");
  infix.push_back("Gt(0,3)");
  infix.push_back("Leq(0,0)");
  infix.push_back("Lt(0,0)");
  infix.push_back("Neq(0,3)");
  infix.push_back("Divide(1,1)");
  infix.push_back("Minus(0)");
  infix.push_back("Plus(0)");
  infix.push_back("Times(0)");
  infix.push_back("root(1,10)");
  infix.push_back("minus(5,3)");
  infix.push_back("times()");
  infix.push_back("plus()");
  infix.push_back("and()");
  infix.push_back("or()");
  infix.push_back("xor()");
  infix.push_back("times(a,b,c,d,e)");
  infix.push_back("plus(a,b,c,d,e)");
  infix.push_back("and(a,b,c,d,e)");
  infix.push_back("or(a,b,c,d,e)");
  infix.push_back("xor(a,b,c,d,e)");
  infix.push_back("foo");
  infix.push_back("foo()");
  infix.push_back("foo(a)");
  infix.push_back("foo(a,b,c)");
  infix.push_back("1");
  infix.push_back("1.1");
  infix.push_back("1e3");
  infix.push_back("1e-3");
  infix.push_back("-3");
  infix.push_back("- 3");
  infix.push_back("(3/4)");
  infix.push_back("(-3/4)");
  infix.push_back("(3/-4)");
  infix.push_back("(-3/-4)");
  infix.push_back("(3/4.4)");
  infix.push_back("(3.2/4)");
  infix.push_back("(3 / 4)");
  infix.push_back("(3 /4)");
  infix.push_back("(3/ 4)");
  infix.push_back("1 unit");
  infix.push_back("1.1 unit");
  infix.push_back("1e3 unit");
  infix.push_back("1e-3 unit");
  infix.push_back("1E3 unit");
  infix.push_back("1E-3 unit");
  infix.push_back("-3 unit");
  infix.push_back("- 3 unit");
  infix.push_back("(3/4) unit");
  infix.push_back("1 e");
  infix.push_back("1E");
  infix.push_back("1.01 e");
  infix.push_back("1erg");
  infix.push_back("1.01erg");
  infix.push_back("2147483647");
  infix.push_back("2147483648");
  infix.push_back("166112956810631");
  infix.push_back("0.001661129568");
  infix.push_back("(0.00166112956810631)");
  infix.push_back("1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890");
  infix.push_back("a+b");
  infix.push_back("a-b");
  infix.push_back("a*b");
  infix.push_back("a/b");
  infix.push_back("a%b");
  infix.push_back("a^b");
  infix.push_back("a<b");
  infix.push_back("a>b");
  infix.push_back("a==b");
  infix.push_back("a<=b");
  infix.push_back("a>=b");
  infix.push_back("a!=b");
  infix.push_back("a<>b");
  infix.push_back("a&&b");
  infix.push_back("a||b");
  infix.push_back("-a");
  infix.push_back("+a");
  infix.push_back("!a");

  infix.push_back("a + b + c");
  infix.push_back("a + b - c");
  infix.push_back("a - b + c");
  infix.push_back("a + b * c");
  infix.push_back("a * b + c");
  infix.push_back("a + b / c");
  infix.push_back("a / b + c");
  infix.push_back("a + b % c");
  infix.push_back("a % b + c");
  infix.push_back("a + b ^ c");
  infix.push_back("a ^ b + c");
  infix.push_back("a + b < c");
  infix.push_back("a < b + c");
  infix.push_back("a + b > c");
  infix.push_back("a > b + c");
  infix.push_back("a + b == c");
  infix.push_back("a == b + c");
  infix.push_back("a + b <= c");
  infix.push_back("a <= b + c");
  infix.push_back("a + b >= c");
  infix.push_back("a >= b + c");
  infix.push_back("a + b != c");
  infix.push_back("a != b + c");
  infix.push_back("a + b && c");
  infix.push_back("a && b + c");
  infix.push_back("a + b || c");
  infix.push_back("a || b + c");

  infix.push_back("a - b - c");
  infix.push_back("a - b * c");
  infix.push_back("a * b - c");
  infix.push_back("a - b / c");
  infix.push_back("a / b - c");
  infix.push_back("a - b % c");
  infix.push_back("a % b - c");
  infix.push_back("a - b ^ c");
  infix.push_back("a ^ b - c");
  infix.push_back("a - b < c");
  infix.push_back("a < b - c");
  infix.push_back("a - b > c");
  infix.push_back("a > b - c");
  infix.push_back("a - b == c");
  infix.push_back("a == b - c");
  infix.push_back("a - b <= c");
  infix.push_back("a <= b - c");
  infix.push_back("a - b >= c");
  infix.push_back("a >= b - c");
  infix.push_back("a - b != c");
  infix.push_back("a != b - c");
  infix.push_back("a - b && c");
  infix.push_back("a && b - c");
  infix.push_back("a - b || c");
  infix.push_back("a || b - c");

  infix.push_back("a * b * c");
  infix.push_back("a * b / c");
  infix.push_back("a / b * c");
  infix.push_back("a * b % c");
  infix.push_back("a % b * c");
  infix.push_back("a * b ^ c");
  infix.push_back("a ^ b * c");
  infix.push_back("a * b < c");
  infix.push_back("a < b * c");
  infix.push_back("a * b > c");
  infix.push_back("a > b * c");
  infix.push_back("a * b == c");
  infix.push_back("a == b * c");
  infix.push_back("a * b <= c");
  infix.push_back("a <= b * c");
  infix.push_back("a * b >= c");
  infix.push_back("a >= b * c");
  infix.push_back("a * b != c");
  infix.push_back("a != b * c");
  infix.push_back("a * b && c");
  infix.push_back("a && b * c");
  infix.push_back("a * b || c");
  infix.push_back("a || b * c");

  infix.push_back("a / b / c");
  infix.push_back("a / b % c");
  infix.push_back("a % b / c");
  infix.push_back("a / b ^ c");
  infix.push_back("a ^ b / c");
  infix.push_back("a / b < c");
  infix.push_back("a < b / c");
  infix.push_back("a / b > c");
  infix.push_back("a > b / c");
  infix.push_back("a / b == c");
  infix.push_back("a == b / c");
  infix.push_back("a / b <= c");
  infix.push_back("a <= b / c");
  infix.push_back("a / b >= c");
  infix.push_back("a >= b / c");
  infix.push_back("a / b != c");
  infix.push_back("a != b / c");
  infix.push_back("a / b && c");
  infix.push_back("a && b / c");
  infix.push_back("a / b || c");
  infix.push_back("a || b / c");

  infix.push_back("a % b % c");
  infix.push_back("a % b ^ c");
  infix.push_back("a ^ b % c");
  infix.push_back("a % b < c");
  infix.push_back("a < b % c");
  infix.push_back("a % b > c");
  infix.push_back("a > b % c");
  infix.push_back("a % b == c");
  infix.push_back("a == b % c");
  infix.push_back("a % b <= c");
  infix.push_back("a <= b % c");
  infix.push_back("a % b >= c");
  infix.push_back("a >= b % c");
  infix.push_back("a % b != c");
  infix.push_back("a != b % c");
  infix.push_back("a % b && c");
  infix.push_back("a && b % c");
  infix.push_back("a % b || c");
  infix.push_back("a || b % c");

  infix.push_back("a ^ b ^ c");
  infix.push_back("a ^ b < c");
  infix.push_back("a < b ^ c");
  infix.push_back("a ^ b > c");
  infix.push_back("a > b ^ c");
  infix.push_back("a ^ b == c");
  infix.push_back("a == b ^ c");
  infix.push_back("a ^ b <= c");
  infix.push_back("a <= b ^ c");
  infix.push_back("a ^ b >= c");
  infix.push_back("a >= b ^ c");
  infix.push_back("a ^ b != c");
  infix.push_back("a != b ^ c");
  infix.push_back("a ^ b && c");
  infix.push_back("a && b ^ c");
  infix.push_back("a ^ b || c");
  infix.push_back("a || b ^ c");

  infix.push_back("a < b < c");
  infix.push_back("a < b > c");
  infix.push_back("a > b < c");
  infix.push_back("a < b == c");
  infix.push_back("a == b < c");
  infix.push_back("a < b <= c");
  infix.push_back("a <= b < c");
  infix.push_back("a < b >= c");
  infix.push_back("a >= b < c");
  infix.push_back("a < b != c");
  infix.push_back("a != b < c");
  infix.push_back("a < b && c");
  infix.push_back("a && b < c");
  infix.push_back("a < b || c");
  infix.push_back("a || b < c");

  infix.push_back("a > b > c");
  infix.push_back("a > b == c");
  infix.push_back("a == b > c");
  infix.push_back("a > b <= c");
  infix.push_back("a <= b > c");
  infix.push_back("a > b >= c");
  infix.push_back("a >= b > c");
  infix.push_back("a > b != c");
  infix.push_back("a != b > c");
  infix.push_back("a > b && c");
  infix.push_back("a && b > c");
  infix.push_back("a > b || c");
  infix.push_back("a || b > c");

  infix.push_back("a == b == c");
  infix.push_back("a == b <= c");
  infix.push_back("a <= b == c");
  infix.push_back("a == b >= c");
  infix.push_back("a >= b == c");
  infix.push_back("a == b != c");
  infix.push_back("a != b == c");
  infix.push_back("a == b && c");
  infix.push_back("a && b == c");
  infix.push_back("a == b || c");
  infix.push_back("a || b == c");

  infix.push_back("a <= b <= c");
  infix.push_back("a <= b >= c");
  infix.push_back("a >= b <= c");
  infix.push_back("a <= b != c");
  infix.push_back("a != b <= c");
  infix.push_back("a <= b && c");
  infix.push_back("a && b <= c");
  infix.push_back("a <= b || c");
  infix.push_back("a || b <= c");

  infix.push_back("a >= b >= c");
  infix.push_back("a >= b != c");
  infix.push_back("a != b >= c");
  infix.push_back("a >= b && c");
  infix.push_back("a && b >= c");
  infix.push_back("a >= b || c");
  infix.push_back("a || b >= c");

  infix.push_back("a != b != c");
  infix.push_back("a != b && c");
  infix.push_back("a && b != c");
  infix.push_back("a != b || c");
  infix.push_back("a || b != c");

  infix.push_back("a && b && c");
  infix.push_back("a && b || c");
  infix.push_back("a || b && c");

  infix.push_back("a || b || c");

  infix.push_back("(a + b) + c");
  infix.push_back("(a + b) - c");
  infix.push_back("(a - b) + c");
  infix.push_back("(a + b) * c");
  infix.push_back("(a * b) + c");
  infix.push_back("(a + b) / c");
  infix.push_back("(a / b) + c");
  infix.push_back("(a + b) % c");
  infix.push_back("(a % b) + c");
  infix.push_back("(a + b) ^ c");
  infix.push_back("(a ^ b) + c");
  infix.push_back("(a + b) < c");
  infix.push_back("(a < b) + c");
  infix.push_back("(a + b) > c");
  infix.push_back("(a > b) + c");
  infix.push_back("(a + b) == c");
  infix.push_back("(a == b) + c");
  infix.push_back("(a + b) <= c");
  infix.push_back("(a <= b) + c");
  infix.push_back("(a + b) >= c");
  infix.push_back("(a >= b) + c");
  infix.push_back("(a + b) != c");
  infix.push_back("(a != b) + c");
  infix.push_back("(a + b) && c");
  infix.push_back("(a && b) + c");
  infix.push_back("(a + b) || c");
  infix.push_back("(a || b) + c");

  infix.push_back("(a - b) - c");
  infix.push_back("(a - b) * c");
  infix.push_back("(a * b) - c");
  infix.push_back("(a - b) / c");
  infix.push_back("(a / b) - c");
  infix.push_back("(a - b) % c");
  infix.push_back("(a % b) - c");
  infix.push_back("(a - b) ^ c");
  infix.push_back("(a ^ b) - c");
  infix.push_back("(a - b) < c");
  infix.push_back("(a < b) - c");
  infix.push_back("(a - b) > c");
  infix.push_back("(a > b) - c");
  infix.push_back("(a - b) == c");
  infix.push_back("(a == b) - c");
  infix.push_back("(a - b) <= c");
  infix.push_back("(a <= b) - c");
  infix.push_back("(a - b) >= c");
  infix.push_back("(a >= b) - c");
  infix.push_back("(a - b) != c");
  infix.push_back("(a != b) - c");
  infix.push_back("(a - b) && c");
  infix.push_back("(a && b) - c");
  infix.push_back("(a - b) || c");
  infix.push_back("(a || b) - c");

  infix.push_back("(a * b) * c");
  infix.push_back("(a * b) / c");
  infix.push_back("(a / b) * c");
  infix.push_back("(a * b) % c");
  infix.push_back("(a % b) * c");
  infix.push_back("(a * b) ^ c");
  infix.push_back("(a ^ b) * c");
  infix.push_back("(a * b) < c");
  infix.push_back("(a < b) * c");
  infix.push_back("(a * b) > c");
  infix.push_back("(a > b) * c");
  infix.push_back("(a * b) == c");
  infix.push_back("(a == b) * c");
  infix.push_back("(a * b) <= c");
  infix.push_back("(a <= b) * c");
  infix.push_back("(a * b) >= c");
  infix.push_back("(a >= b) * c");
  infix.push_back("(a * b) != c");
  infix.push_back("(a != b) * c");
  infix.push_back("(a * b) && c");
  infix.push_back("(a && b) * c");
  infix.push_back("(a * b) || c");
  infix.push_back("(a || b) * c");

  infix.push_back("(a / b) / c");
  infix.push_back("(a / b) % c");
  infix.push_back("(a % b) / c");
  infix.push_back("(a / b) ^ c");
  infix.push_back("(a ^ b) / c");
  infix.push_back("(a / b) < c");
  infix.push_back("(a < b) / c");
  infix.push_back("(a / b) > c");
  infix.push_back("(a > b) / c");
  infix.push_back("(a / b) == c");
  infix.push_back("(a == b) / c");
  infix.push_back("(a / b) <= c");
  infix.push_back("(a <= b) / c");
  infix.push_back("(a / b) >= c");
  infix.push_back("(a >= b) / c");
  infix.push_back("(a / b) != c");
  infix.push_back("(a != b) / c");
  infix.push_back("(a / b) && c");
  infix.push_back("(a && b) / c");
  infix.push_back("(a / b) || c");
  infix.push_back("(a || b) / c");

  infix.push_back("(a % b) % c");
  infix.push_back("(a % b) ^ c");
  infix.push_back("(a ^ b) % c");
  infix.push_back("(a % b) < c");
  infix.push_back("(a < b) % c");
  infix.push_back("(a % b) > c");
  infix.push_back("(a > b) % c");
  infix.push_back("(a % b) == c");
  infix.push_back("(a == b) % c");
  infix.push_back("(a % b) <= c");
  infix.push_back("(a <= b) % c");
  infix.push_back("(a % b) >= c");
  infix.push_back("(a >= b) % c");
  infix.push_back("(a % b) != c");
  infix.push_back("(a != b) % c");
  infix.push_back("(a % b) && c");
  infix.push_back("(a && b) % c");
  infix.push_back("(a % b) || c");
  infix.push_back("(a || b) % c");

  infix.push_back("(a ^ b) ^ c");
  infix.push_back("(a ^ b) < c");
  infix.push_back("(a < b) ^ c");
  infix.push_back("(a ^ b) > c");
  infix.push_back("(a > b) ^ c");
  infix.push_back("(a ^ b) == c");
  infix.push_back("(a == b) ^ c");
  infix.push_back("(a ^ b) <= c");
  infix.push_back("(a <= b) ^ c");
  infix.push_back("(a ^ b) >= c");
  infix.push_back("(a >= b) ^ c");
  infix.push_back("(a ^ b) != c");
  infix.push_back("(a != b) ^ c");
  infix.push_back("(a ^ b) && c");
  infix.push_back("(a && b) ^ c");
  infix.push_back("(a ^ b) || c");
  infix.push_back("(a || b) ^ c");

  infix.push_back("(a < b) < c");
  infix.push_back("(a < b) > c");
  infix.push_back("(a > b) < c");
  infix.push_back("(a < b) == c");
  infix.push_back("(a == b) < c");
  infix.push_back("(a < b) <= c");
  infix.push_back("(a <= b) < c");
  infix.push_back("(a < b) >= c");
  infix.push_back("(a >= b) < c");
  infix.push_back("(a < b) != c");
  infix.push_back("(a != b) < c");
  infix.push_back("(a < b) && c");
  infix.push_back("(a && b) < c");
  infix.push_back("(a < b) || c");
  infix.push_back("(a || b) < c");

  infix.push_back("(a > b) > c");
  infix.push_back("(a > b) == c");
  infix.push_back("(a == b) > c");
  infix.push_back("(a > b) <= c");
  infix.push_back("(a <= b) > c");
  infix.push_back("(a > b) >= c");
  infix.push_back("(a >= b) > c");
  infix.push_back("(a > b) != c");
  infix.push_back("(a != b) > c");
  infix.push_back("(a > b) && c");
  infix.push_back("(a && b) > c");
  infix.push_back("(a > b) || c");
  infix.push_back("(a || b) > c");
  infix.push_back("(a == b) == c");
  infix.push_back("(a == b) <= c");
  infix.push_back("(a <= b) == c");
  infix.push_back("(a == b) >= c");
  infix.push_back("(a >= b) == c");
  infix.push_back("(a == b) != c");
  infix.push_back("(a != b) == c");
  infix.push_back("(a == b) && c");
  infix.push_back("(a && b) == c");
  infix.push_back("(a == b) || c");
  infix.push_back("(a || b) == c");

  infix.push_back("(a <= b) <= c");
  infix.push_back("(a <= b) >= c");
  infix.push_back("(a >= b) <= c");
  infix.push_back("(a <= b) != c");
  infix.push_back("(a != b) <= c");
  infix.push_back("(a <= b) && c");
  infix.push_back("(a && b) <= c");
  infix.push_back("(a <= b) || c");
  infix.push_back("(a || b) <= c");

  infix.push_back("(a >= b) >= c");
  infix.push_back("(a >= b) != c");
  infix.push_back("(a != b) >= c");
  infix.push_back("(a >= b) && c");
  infix.push_back("(a && b) >= c");
  infix.push_back("(a >= b) || c");
  infix.push_back("(a || b) >= c");

  infix.push_back("(a != b) != c");
  infix.push_back("(a != b) && c");
  infix.push_back("(a && b) != c");
  infix.push_back("(a != b) || c");
  infix.push_back("(a || b) != c");

  infix.push_back("(a && b) && c");
  infix.push_back("(a && b) || c");
  infix.push_back("(a || b) && c");

  infix.push_back("(a || b) || c");

  infix.push_back("a + (b + c)");
  infix.push_back("a + (b - c)");
  infix.push_back("a - (b + c)");
  infix.push_back("a + (b * c)");
  infix.push_back("a * (b + c)");
  infix.push_back("a + (b / c)");
  infix.push_back("a / (b + c)");
  infix.push_back("a + (b % c)");
  infix.push_back("a % (b + c)");
  infix.push_back("a + (b ^ c)");
  infix.push_back("a ^ (b + c)");
  infix.push_back("a + (b < c)");
  infix.push_back("a < (b + c)");
  infix.push_back("a + (b > c)");
  infix.push_back("a > (b + c)");
  infix.push_back("a + (b == c)");
  infix.push_back("a == (b + c)");
  infix.push_back("a + (b <= c)");
  infix.push_back("a <= (b + c)");
  infix.push_back("a + (b >= c)");
  infix.push_back("a >= (b + c)");
  infix.push_back("a + (b != c)");
  infix.push_back("a != (b + c)");
  infix.push_back("a + (b && c)");
  infix.push_back("a && (b + c)");
  infix.push_back("a + (b || c)");
  infix.push_back("a || (b + c)");

  infix.push_back("a - (b - c)");
  infix.push_back("a - (b * c)");
  infix.push_back("a * (b - c)");
  infix.push_back("a - (b / c)");
  infix.push_back("a / (b - c)");
  infix.push_back("a - (b % c)");
  infix.push_back("a % (b - c)");
  infix.push_back("a - (b ^ c)");
  infix.push_back("a ^ (b - c)");
  infix.push_back("a - (b < c)");
  infix.push_back("a < (b - c)");
  infix.push_back("a - (b > c)");
  infix.push_back("a > (b - c)");
  infix.push_back("a - (b == c)");
  infix.push_back("a == (b - c)");
  infix.push_back("a - (b <= c)");
  infix.push_back("a <= (b - c)");
  infix.push_back("a - (b >= c)");
  infix.push_back("a >= (b - c)");
  infix.push_back("a - (b != c)");
  infix.push_back("a != (b - c)");
  infix.push_back("a - (b && c)");
  infix.push_back("a && (b - c)");
  infix.push_back("a - (b || c)");
  infix.push_back("a || (b - c)");

  infix.push_back("a * (b * c)");
  infix.push_back("a * (b / c)");
  infix.push_back("a / (b * c)");
  infix.push_back("a * (b % c)");
  infix.push_back("a % (b * c)");
  infix.push_back("a * (b ^ c)");
  infix.push_back("a ^ (b * c)");
  infix.push_back("a * (b < c)");
  infix.push_back("a < (b * c)");
  infix.push_back("a * (b > c)");
  infix.push_back("a > (b * c)");
  infix.push_back("a * (b == c)");
  infix.push_back("a == (b * c)");
  infix.push_back("a * (b <= c)");
  infix.push_back("a <= (b * c)");
  infix.push_back("a * (b >= c)");
  infix.push_back("a >= (b * c)");
  infix.push_back("a * (b != c)");
  infix.push_back("a != (b * c)");
  infix.push_back("a * (b && c)");
  infix.push_back("a && (b * c)");
  infix.push_back("a * (b || c)");
  infix.push_back("a || (b * c)");

  infix.push_back("a / (b / c)");
  infix.push_back("a / (b % c)");
  infix.push_back("a % (b / c)");
  infix.push_back("a / (b ^ c)");
  infix.push_back("a ^ (b / c)");
  infix.push_back("a / (b < c)");
  infix.push_back("a < (b / c)");
  infix.push_back("a / (b > c)");
  infix.push_back("a > (b / c)");
  infix.push_back("a / (b == c)");
  infix.push_back("a == (b / c)");
  infix.push_back("a / (b <= c)");
  infix.push_back("a <= (b / c)");
  infix.push_back("a / (b >= c)");
  infix.push_back("a >= (b / c)");
  infix.push_back("a / (b != c)");
  infix.push_back("a != (b / c)");
  infix.push_back("a / (b && c)");
  infix.push_back("a && (b / c)");
  infix.push_back("a / (b || c)");
  infix.push_back("a || (b / c)");

  infix.push_back("a % (b % c)");
  infix.push_back("a % (b ^ c)");
  infix.push_back("a ^ (b % c)");
  infix.push_back("a % (b < c)");
  infix.push_back("a < (b % c)");
  infix.push_back("a % (b > c)");
  infix.push_back("a > (b % c)");
  infix.push_back("a % (b == c)");
  infix.push_back("a == (b % c)");
  infix.push_back("a % (b <= c)");
  infix.push_back("a <= (b % c)");
  infix.push_back("a % (b >= c)");
  infix.push_back("a >= (b % c)");
  infix.push_back("a % (b != c)");
  infix.push_back("a != (b % c)");
  infix.push_back("a % (b && c)");
  infix.push_back("a && (b % c)");
  infix.push_back("a % (b || c)");
  infix.push_back("a || (b % c)");

  infix.push_back("a ^ (b ^ c)");
  infix.push_back("a ^ (b < c)");
  infix.push_back("a < (b ^ c)");
  infix.push_back("a ^ (b > c)");
  infix.push_back("a > (b ^ c)");
  infix.push_back("a ^ (b == c)");
  infix.push_back("a == (b ^ c)");
  infix.push_back("a ^ (b <= c)");
  infix.push_back("a <= (b ^ c)");
  infix.push_back("a ^ (b >= c)");
  infix.push_back("a >= (b ^ c)");
  infix.push_back("a ^ (b != c)");
  infix.push_back("a != (b ^ c)");
  infix.push_back("a ^ (b && c)");
  infix.push_back("a && (b ^ c)");
  infix.push_back("a ^ (b || c)");
  infix.push_back("a || (b ^ c)");

  infix.push_back("a < (b < c)");
  infix.push_back("a < (b > c)");
  infix.push_back("a > (b < c)");
  infix.push_back("a < (b == c)");
  infix.push_back("a == (b < c)");
  infix.push_back("a < (b <= c)");
  infix.push_back("a <= (b < c)");
  infix.push_back("a < (b >= c)");
  infix.push_back("a >= (b < c)");
  infix.push_back("a < (b != c)");
  infix.push_back("a != (b < c)");
  infix.push_back("a < (b && c)");
  infix.push_back("a && (b < c)");
  infix.push_back("a < (b || c)");
  infix.push_back("a || (b < c)");

  infix.push_back("a > (b > c)");
  infix.push_back("a > (b == c)");
  infix.push_back("a == (b > c)");
  infix.push_back("a > (b <= c)");
  infix.push_back("a <= (b > c)");
  infix.push_back("a > (b >= c)");
  infix.push_back("a >= (b > c)");
  infix.push_back("a > (b != c)");
  infix.push_back("a != (b > c)");
  infix.push_back("a > (b && c)");
  infix.push_back("a && (b > c)");
  infix.push_back("a > (b || c)");
  infix.push_back("a || (b > c)");

  infix.push_back("a == (b == c)");
  infix.push_back("a == (b <= c)");
  infix.push_back("a <= (b == c)");
  infix.push_back("a == (b >= c)");
  infix.push_back("a >= (b == c)");
  infix.push_back("a == (b != c)");
  infix.push_back("a != (b == c)");
  infix.push_back("a == (b && c)");
  infix.push_back("a && (b == c)");
  infix.push_back("a == (b || c)");
  infix.push_back("a || (b == c)");

  infix.push_back("a <= (b <= c)");
  infix.push_back("a <= (b >= c)");
  infix.push_back("a >= (b <= c)");
  infix.push_back("a <= (b != c)");
  infix.push_back("a != (b <= c)");
  infix.push_back("a <= (b && c)");
  infix.push_back("a && (b <= c)");
  infix.push_back("a <= (b || c)");
  infix.push_back("a || (b <= c)");

  infix.push_back("a >= (b >= c)");
  infix.push_back("a >= (b != c)");
  infix.push_back("a != (b >= c)");
  infix.push_back("a >= (b && c)");
  infix.push_back("a && (b >= c)");
  infix.push_back("a >= (b || c)");
  infix.push_back("a || (b >= c)");

  infix.push_back("a != (b != c)");
  infix.push_back("a != (b && c)");
  infix.push_back("a && (b != c)");
  infix.push_back("a != (b || c)");
  infix.push_back("a || (b != c)");

  infix.push_back("a && (b && c)");
  infix.push_back("a && (b || c)");
  infix.push_back("a || (b && c)");

  infix.push_back("a || (b || c)");

  infix.push_back("a<b<c<=d");
  infix.push_back("a>=b==c==d");

  infix.push_back("f(a+b)");
  infix.push_back("f(1*x)");
  infix.push_back("f(b-a)");
  infix.push_back("f(b/a)");
  infix.push_back("f(a^x)");
  infix.push_back("f(-a)");
  infix.push_back("f(a%b)");
  infix.push_back("f(+a)");
  infix.push_back("f(a>b)");
  infix.push_back("f(a<b)");
  infix.push_back("f(a>=b)");
  infix.push_back("f(a<=b)");
  infix.push_back("f(a==b)");
  infix.push_back("f(a!=b)");
  infix.push_back("f(a<>b)");
  infix.push_back("f(a&&b)");
  infix.push_back("f(a||b)");
  infix.push_back("f(!a)");

  infix.push_back("a+-b");
  infix.push_back("a--b");
  infix.push_back("a*-b");
  infix.push_back("a/-b");
  infix.push_back("a%-b");
  infix.push_back("a^-b");
  infix.push_back("a>-b");
  infix.push_back("a<-b");
  infix.push_back("a>=-b");
  infix.push_back("a<=-b");
  infix.push_back("a==-b");
  infix.push_back("a!=-b");
  infix.push_back("a&&-b");
  infix.push_back("a||-b");
  infix.push_back("--a");
  infix.push_back("+-a");
  infix.push_back("!-a");
  infix.push_back("-(-a)");
  infix.push_back("+(-a)");
  infix.push_back("!(-a)");
  infix.push_back("-a+b");
  infix.push_back("-a-b");
  infix.push_back("-a*b");
  infix.push_back("-a/b");
  infix.push_back("-a^b");
  infix.push_back("-a%b");
  infix.push_back("-a>b");
  infix.push_back("-a<b");
  infix.push_back("-a>=b");
  infix.push_back("-a<=b");
  infix.push_back("-a==b");
  infix.push_back("-a!=b");
  infix.push_back("-a&&b");
  infix.push_back("-a||b");

  infix.push_back("a++b");
  infix.push_back("a-+b");
  infix.push_back("a*+b");
  infix.push_back("a/+b");
  infix.push_back("a^+b");
  infix.push_back("a%+b");
  infix.push_back("a>+b");
  infix.push_back("a<+b");
  infix.push_back("a>=+b");
  infix.push_back("a<=+b");
  infix.push_back("a==+b");
  infix.push_back("a!=+b");
  infix.push_back("a&&+b");
  infix.push_back("a||+b");
  infix.push_back("-+a");
  infix.push_back("++a");
  infix.push_back("!+a");
  infix.push_back("-(+a)");
  infix.push_back("+(+a)");
  infix.push_back("!(+a)");
  infix.push_back("+a+b");
  infix.push_back("+a-b");
  infix.push_back("+a*b");
  infix.push_back("+a/b");
  infix.push_back("+a^b");
  infix.push_back("+a%b");
  infix.push_back("+a>b");
  infix.push_back("+a<b");
  infix.push_back("+a>=b");
  infix.push_back("+a<=b");
  infix.push_back("+a==b");
  infix.push_back("+a!=b");
  infix.push_back("+a&&b");
  infix.push_back("+a||b");

  infix.push_back("a+!b");
  infix.push_back("a-!b");
  infix.push_back("a*!b");
  infix.push_back("a/!b");
  infix.push_back("a^!b");
  infix.push_back("a%!b");
  infix.push_back("a>!b");
  infix.push_back("a<!b");
  infix.push_back("a>=!b");
  infix.push_back("a<=!b");
  infix.push_back("a==!b");
  infix.push_back("a!=!b");
  infix.push_back("a&&!b");
  infix.push_back("a||!b");
  infix.push_back("-!a");
  infix.push_back("+!a");
  infix.push_back("!!a");
  infix.push_back("-(!a)");
  infix.push_back("+(!a)");
  infix.push_back("!(!a)");
  infix.push_back("!a+b");
  infix.push_back("!a-b");
  infix.push_back("!a*b");
  infix.push_back("!a/b");
  infix.push_back("!a^b");
  infix.push_back("!a%b");
  infix.push_back("!a>b");
  infix.push_back("!a<b");
  infix.push_back("!a>=b");
  infix.push_back("!a<=b");
  infix.push_back("!a==b");
  infix.push_back("!a!=b");
  infix.push_back("!a&&b");
  infix.push_back("!a||b");

  infix.push_back("(-a)+b");
  infix.push_back("(-a)-b");
  infix.push_back("(-a)*b");
  infix.push_back("(-a)/b");
  infix.push_back("(-a)^b");
  infix.push_back("(-a)%b");
  infix.push_back("(-a)>b");
  infix.push_back("(-a)<b");
  infix.push_back("(-a)>=b");
  infix.push_back("(-a)<=b");
  infix.push_back("(-a)==b");
  infix.push_back("(-a)!=b");
  infix.push_back("(-a)&&b");
  infix.push_back("(-a)||b");
  infix.push_back("(+a)+b");
  infix.push_back("(+a)-b");
  infix.push_back("(+a)*b");
  infix.push_back("(+a)/b");
  infix.push_back("(+a)^b");
  infix.push_back("(+a)%b");
  infix.push_back("(+a)>b");
  infix.push_back("(+a)<b");
  infix.push_back("(+a)>=b");
  infix.push_back("(+a)<=b");
  infix.push_back("(+a)==b");
  infix.push_back("(+a)!=b");
  infix.push_back("(+a)&&b");
  infix.push_back("(+a)||b");
  infix.push_back("(!a)+b");
  infix.push_back("(!a)-b");
  infix.push_back("(!a)*b");
  infix.push_back("(!a)/b");
  infix.push_back("(!a)^b");
  infix.push_back("(!a)%b");
  infix.push_back("(!a)>b");
  infix.push_back("(!a)<b");
  infix.push_back("(!a)>=b");
  infix.push_back("(!a)<=b");
  infix.push_back("(!a)==b");
  infix.push_back("(!a)!=b");
  infix.push_back("(!a)&&b");
  infix.push_back("(!a)||b");

  infix.push_back("-(a+b)");
  infix.push_back("-(a-b)");
  infix.push_back("-(a*b)");
  infix.push_back("-(a/b)");
  infix.push_back("-(a^b)");
  infix.push_back("-(a%b)");
  infix.push_back("-(a>b)");
  infix.push_back("-(a<b)");
  infix.push_back("-(a>=b)");
  infix.push_back("-(a<=b)");
  infix.push_back("-(a==b)");
  infix.push_back("-(a!=b)");
  infix.push_back("-(a&&b)");
  infix.push_back("-(a||b)");
  infix.push_back("+(a+b)");
  infix.push_back("+(a-b)");
  infix.push_back("+(a*b)");
  infix.push_back("+(a/b)");
  infix.push_back("+(a^b)");
  infix.push_back("+(a%b)");
  infix.push_back("+(a>b)");
  infix.push_back("+(a<b)");
  infix.push_back("+(a>=b)");
  infix.push_back("+(a<=b)");
  infix.push_back("+(a==b)");
  infix.push_back("+(a!=b)");
  infix.push_back("+(a&&b)");
  infix.push_back("+(a||b)");
  infix.push_back("!(a+b)");
  infix.push_back("!(a-b)");
  infix.push_back("!(a*b)");
  infix.push_back("!(a/b)");
  infix.push_back("!(a^b)");
  infix.push_back("!(a%b)");
  infix.push_back("!(a>b)");
  infix.push_back("!(a<b)");
  infix.push_back("!(a>=b)");
  infix.push_back("!(a<=b)");
  infix.push_back("!(a==b)");
  infix.push_back("!(a!=b)");
  infix.push_back("!(a&&b)");
  infix.push_back("!(a||b)");
  infix.push_back("TIME");
